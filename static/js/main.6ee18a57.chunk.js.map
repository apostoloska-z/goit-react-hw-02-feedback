{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","options","clickFn","className","map","option","type","id","onClick","defaultProps","Section","title","children","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","App","state","handleBtnClick","event","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAGMA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAAZ,OACpB,qBAAKC,UAAU,UAAf,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBACIF,UAAU,kBACVG,KAAK,SAELC,GAAIF,EACJG,QAASN,EALb,SAMEG,GAHOA,SASrBL,EAAgBS,aAAe,CAC3BR,QAAS,IAQED,QCxBTU,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,0BAAST,UAAU,UAAnB,UACI,oBAAIA,UAAU,gBAAd,SAA+BQ,IAC9BC,OAKTF,EAAQD,aAAe,CACnBE,MAAO,IAOID,QCIAG,G,MApBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,iBAA7B,OACf,qBAAIf,UAAU,aAAd,UACI,qBAAIA,UAAU,mBAAd,mBAAwCW,KACxC,qBAAIX,UAAU,mBAAd,sBAA2CY,KAC3C,qBAAIZ,UAAU,mBAAd,kBAAuCa,KACvC,qBAAIb,UAAU,mBAAd,oBAAyCc,KACzC,qBAAId,UAAU,mBAAd,gCAAqDe,EAArD,aCPFC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KAGRD,EAAaV,aAAe,CACxBW,QAAS,IAOED,QC0CAE,E,4MAhDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAMG,OAAOpB,GAAKmB,EAAUF,EAAMG,OAAOpB,IAAM,O,EAIpDqB,mBAAqB,WACnB,OAAO,EAAKN,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,K,EAG3Da,gCAAkC,WAChC,OAAOC,KAAKC,MAAM,EAAKT,MAAMR,KAAK,EAAKc,qBAAqB,M,4CAG9D,WACE,OACE,qCACE,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAAS+B,OAAOC,KAAKC,KAAKZ,OAC1BpB,QAASgC,KAAKX,mBAGlB,cAAC,EAAD,CAASZ,MAAM,aAAf,SACGuB,KAAKN,qBACF,cAAC,EAAD,CACAd,KAAMoB,KAAKZ,MAAMR,KACjBC,QAASmB,KAAKZ,MAAMP,QACpBC,IAAKkB,KAAKZ,MAAMN,IAChBC,MAAOiB,KAAKN,qBACZV,iBAAkBgB,KAAKL,oCAEvB,cAAC,EAAD,CACAT,QAAQ,+B,GAzCJe,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ee18a57.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport \"./FeedbackOptions.scss\"\r\n\r\nconst FeedbackOptions = ({ options, clickFn }) => (\r\n    <div className=\"options\">\r\n        {options.map(option => (\r\n            <button\r\n                className=\"options__button\"\r\n                type=\"button\"\r\n                key={option}\r\n                id={option}\r\n                onClick={clickFn}\r\n            >{option}\r\n            </button>\r\n         ))}\r\n    </div>\r\n)\r\n\r\nFeedbackOptions.defaultProps = {\r\n    options: [],\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    clickFn: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport './Section.scss';\r\n\r\nconst Section = ({title, children}) => (\r\n    <section className=\"section\">\r\n        <h2 className=\"section__name\">{title}</h2>\r\n        {children}\r\n\r\n    </section>\r\n)\r\n\r\nSection.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport './Statistics.scss';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positiveFeedback}) => (\r\n    <ul className=\"statistics\">\r\n        <li className=\"statistics__item\">Good: {good}</li>\r\n        <li className=\"statistics__item\">Neutral: {neutral}</li>\r\n        <li className=\"statistics__item\">Bad: {bad}</li>\r\n        <li className=\"statistics__item\">Total: {total}</li>\r\n        <li className=\"statistics__item\">Positive feedback: {positiveFeedback} %</li>\r\n        \r\n    </ul>\r\n)\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,    \r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positiveFeedback: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n)\r\n\r\nNotification.defaultProps = {\r\n    message: '',\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\nimport Section from \"./Components/Section\";\nimport Statistics from \"./Components/Statistics\";\nimport Notification from \"./Components/Notification\"\n\nclass App extends Component {\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  handleBtnClick = (event) => {\n    this.setState((prevState) => ({\n      [event.target.id]: prevState[event.target.id] + 1,\n    }))\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round(this.state.good/this.countTotalFeedback()*100)\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            clickFn={this.handleBtnClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback()\n            ? <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n              />\n            : <Notification\n              message=\"No feedback given\"\n              />\n          }\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}