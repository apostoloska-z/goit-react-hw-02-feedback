{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","options","clickFn","map","option","className","styles","button","type","id","onClick","defaultProps","Section","title","children","section","Statistics","good","neutral","bad","total","positiveFeedback","statistics__item","Notification","message","App","state","handleBtnClick","event","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAGMA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAAZ,OACpB,8BACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBACIC,UAAWC,IAAOC,OAClBC,KAAK,SAELC,GAAIL,EACJM,QAASR,EALb,SAMEE,GAHOA,SASrBJ,EAAgBW,aAAe,CAC3BV,QAAS,IAQED,Q,gBCxBTY,EAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,0BAAST,UAAWC,IAAOS,QAA3B,UACI,6BAAKF,IACJC,MAKTF,EAAQD,aAAe,CACnBE,MAAO,IAOID,Q,gBCIAI,EApBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,iBAA7B,OACf,+BACI,qBAAIhB,UAAWC,IAAOgB,iBAAtB,mBAA+CL,KAC/C,qBAAIZ,UAAWC,IAAOgB,iBAAtB,sBAAkDJ,KAClD,qBAAIb,UAAWC,IAAOgB,iBAAtB,kBAA8CH,KAC9C,qBAAId,UAAWC,IAAOgB,iBAAtB,oBAAgDF,KAChD,qBAAIf,UAAWC,IAAOgB,iBAAtB,gCAA4DD,EAA5D,YCPFE,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,4BAAIA,KAGRD,EAAaZ,aAAe,CACxBa,QAAS,IAOED,QC0CAE,E,4MAhDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAMG,OAAOtB,GAAKqB,EAAUF,EAAMG,OAAOtB,IAAM,O,EAIpDuB,mBAAqB,WACnB,OAAO,EAAKN,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAG3Dc,gCAAkC,WAChC,OAAOC,KAAKC,MAAM,EAAKT,MAAMT,KAAK,EAAKe,qBAAqB,M,4CAG9D,WACE,OACE,qCACE,cAAC,EAAD,CAASnB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASmC,OAAOC,KAAKC,KAAKZ,OAC1BxB,QAASoC,KAAKX,mBAGlB,cAAC,EAAD,CAASd,MAAM,aAAf,SACGyB,KAAKN,qBACF,cAAC,EAAD,CACAf,KAAMqB,KAAKZ,MAAMT,KACjBC,QAASoB,KAAKZ,MAAMR,QACpBC,IAAKmB,KAAKZ,MAAMP,IAChBC,MAAOkB,KAAKN,qBACZX,iBAAkBiB,KAAKL,oCAEvB,cAAC,EAAD,CACAT,QAAQ,+B,GAzCJe,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.abbd3910.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styles from \"./FeedbackOptions.module.css\"\r\n\r\nconst FeedbackOptions = ({ options, clickFn }) => (\r\n    <div>\r\n        {options.map(option => (\r\n            <button\r\n                className={styles.button}\r\n                type=\"button\"\r\n                key={option}\r\n                id={option}\r\n                onClick={clickFn}\r\n            >{option}\r\n            </button>\r\n         ))}\r\n    </div>\r\n)\r\n\r\nFeedbackOptions.defaultProps = {\r\n    options: [],\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    clickFn: PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({title, children}) => (\r\n    <section className={styles.section}>\r\n        <h2>{title}</h2>\r\n        {children}\r\n\r\n    </section>\r\n)\r\n\r\nSection.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positiveFeedback}) => (\r\n    <ul>\r\n        <li className={styles.statistics__item}>Good: {good}</li>\r\n        <li className={styles.statistics__item}>Neutral: {neutral}</li>\r\n        <li className={styles.statistics__item}>Bad: {bad}</li>\r\n        <li className={styles.statistics__item}>Total: {total}</li>\r\n        <li className={styles.statistics__item}>Positive feedback: {positiveFeedback} %</li>\r\n        \r\n    </ul>\r\n)\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,    \r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positiveFeedback: PropTypes.number,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <p>{message}</p>\r\n)\r\n\r\nNotification.defaultProps = {\r\n    message: '',\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\nimport Section from \"./Components/Section\";\nimport Statistics from \"./Components/Statistics\";\nimport Notification from \"./Components/Notification\"\n\nclass App extends Component {\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  handleBtnClick = (event) => {\n    this.setState((prevState) => ({\n      [event.target.id]: prevState[event.target.id] + 1,\n    }))\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round(this.state.good/this.countTotalFeedback()*100)\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            clickFn={this.handleBtnClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback()\n            ? <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n              />\n            : <Notification\n              message=\"No feedback given\"\n              />\n          }\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}